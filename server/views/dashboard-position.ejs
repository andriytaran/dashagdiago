<%-partial('./partials/basePageHeader')%>

<body>

<%- partial('./partials/sidebarPositions') %>

<div class="wrap" id="mainSection">

  <%- partial('./partials/header') %>

  <section class="top-de-dashboard">
    <div class="container">
      <div class="row">
        <div class="col-md-12">
          <h1 id="dashboard-switch-class"  class="s-player-dashboard__heading main-heading"></h1>
          <h1 id="dashboard-position-page-header" class="top-de-dashboard__heading main-heading"></h1>
        </div>
        <div class="col-md-12">
          <div class="top-de-dashboard__table-block">
            <div id="dashboard-position-table-header" class="top-de-dashboard__table-b-desc secondary-heading">

            </div>
            <div class="top-de-dashboard__table players-table">
              <div class="players-table__header">
                <div class="row align-items-center">
                  <div class="col-md-1 offset-1">
                    <div class="players-table__heading">
                      Rate
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="players-table__heading">
                      First Name
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="players-table__heading">
                      Last Name
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="players-table__heading">
                      Position
                    </div>
                  </div>
                  <div class="col-md-2">
                    <div class="players-table__heading">
                      Score
                    </div>
                  </div>
                </div>
              </div>
              <div id="dashboard-position-top-10-players" class="players-table__body">
              </div>
              <div class="players-table__note note">
                Note this data represent public DE players from schools accross the USA based on
                your registered Atheletic and Academic benchmarks
              </div>
            </div>
          </div>
        </div>
        <div class="col-md-12">
          <div class="top-de-dashboard__attr attr">
            <div class="attr__header">
              Overal Scores
            </div>
            <div id="attributes-section-position" class="attr__block-wrap"></div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<%-partial('./partials/modalDeletePlayer.ejs')%>

<script src="../updatedDesign/constants.js"></script>
<script src="../updatedDesign/js/common.js"></script>
<script src="/../assets/js/app/api.js"></script>
<script src="../updatedDesign/barBlock.js"></script>

<script>
  $(document).ready(function () {

    updateHeaderLinks();

    const urlParams = new URLSearchParams(window.location.search);

    let position = (urlParams.get("position") || "").toUpperCase();

    const allClasses = urlParams.get("allClasses");

    let highschoolGraduationYear = (urlParams.get("highschoolGraduationYear") || "").toUpperCase() || "ALL";

    let header;

    const links = `<a href="/dashboard-position/?position=${position}&highschoolGraduationYear=${highschoolGraduationYear}&allClasses=${1}">All classes</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="/dashboard-position/?position=${position}&highschoolGraduationYear=${highschoolGraduationYear}">Current class</a> `

    $('#dashboard-switch-class').html(links);


    if (highschoolGraduationYear && highschoolGraduationYear !== "All" && !allClasses){
      header = `<span>${highschoolGraduationYear} class </span> <span>${position} </span> Position Dashboard `
    } else {
      header = `<span>All classes ${position} </span> Position Dashboard`
    }

    $("#dashboard-position-page-header").html(header);
    $("#dashboard-position-table-header").html(`Top 10 ${position} Players`);

    const updateData = async () => {

      const allPlayers = await getAllPlayers();

      getTopCulturalFitData(position, allClasses ? "ALL" : highschoolGraduationYear, (res, status) => {
        if (status === 'success') {

          const { players = [] } = res;

          const urlParams = new URLSearchParams(window.location.search);

          let highschoolGraduationYear = (urlParams.get("highschoolGraduationYear") || "").toUpperCase() || "ALL";

          const dropdownHtml = (playerId) => {
            const options = allPlayers.map(player=>{
              if (playerId !== player.id){
                return `<option value="${player.id}">${player.fname} ${player.lname}</option>`
              } else {
                return ""
              }
            })

            return [`<option value="" disabled selected>Compare ...</option>`, ...options].join("")
          }

          const html = players.map((player, index) => {

            const { fname, id, lname, position, team, value } = player;

            const playerInfo = `${fname} ${lname}`;

            return `<div class="players-table__row">
                  <div class="row align-items-center">
                    <div class="col-md-1">
                      <div class="players-table__item avatar">
                        <img src="../updatedDesign/img/player-avatar.jpg" alt="">
                      </div>
                    </div>
                    <div class="col-md-1">
                      <div class="players-table__item">
                        ${index + 1}
                      </div>
                    </div>
                    <div class="col-md-2">
                      <div class="players-table__item">
                        ${fname}
                      </div>
                    </div>
                    <div class="col-md-2">
                      <div class="players-table__item">
                         ${lname}
                      </div>
                    </div>
                    <div class="col-md-2">
                      <div class="players-table__item">
                        ${position}
                      </div>
                    </div>
                    <div class="col-md-1">
                      <div class="players-table__item">
                        ${Math.round(value)}
                      </div>
                    </div>
                    <div class="col-md-3">
                      <div class="players-table__item btn-block">
                        <a href="/dashboard-player/?id=${id}&highschoolGraduationYear=${highschoolGraduationYear}">
                          <button class="showdetails-btn">Show Details</button>
                        </a>
                        <a data-toggle="tooltip" title="Edit player info" href="/addnewathlete?id=${id}&highschoolGraduationYear=${highschoolGraduationYear}">
                          <button class="edit-btn"><img src="../updatedDesign/img/edit-icon.svg" alt=""></button>
                        </a>
                        <a data-toggle="tooltip" title="Delete player info" href="#">
                          <button id="delete-button-${id}" data-target="#add-attr" data-toggle="modal" data-player="${id}" data-name="${playerInfo}" class="delete-btn"><img src="../updatedDesign/img/delete-icon.svg" alt=""></button>
                        </a>
                        <select id="compare-dropdown-${id}" class="compare-dropdown" data-player="${id}">${dropdownHtml(id)}</select>
                      </div>
                    </div>
                  </div>
                </div>`
          }).join("");

          $("#dashboard-position-top-10-players").html(html);

          $(`.delete-btn`).click(function () {
            const pid = $(this).data('player')
            const name = $(this).data('name')

            $('#delete-button-modal').off('click');

            $('#delete-button-modal').click(() => {
              deletePlayerById(pid, ()=>{
                $('#close-modal').click();
                setTimeout(updateData, 1000);
              })
            });
          });

          $(`.compare-dropdown`).change(function (e) {
            const pid = $(this).data('player');
            window.location = `/comparePlayers?player1=${pid}&player2=${e.target.value}&highschoolGraduationYear=${highschoolGraduationYear}`;
          });

        }
      })

      getOverallScoresData(position, (res, status) => {
        if (status === 'success') {
          const playerScores = res.scores.player;
          const agdiagoScores = res.scores.agdiago;

          const promises = Object.keys(playerScores).map(key => {
            return new Promise((resolve, reject) => {
              getAttributesData(position, key, (data, status2) => {
                if (status2 === 'success') {
                  resolve (attrBlockHtml(key, agdiagoScores[key], playerScores[key], data, key + '-attr-id'));
                } else {
                  reject('Cannot get data')
                }
              });
            });
          })

          Promise.all(promises)
            .then(res=>{
              $(`#attributes-section-position`).html(res.join(""));
              $('[data-toggle="tooltip"]').tooltip({animation: false, delay: 0})
            })
        }
      });
    }

    updateData()

  });

</script>

</body>

</html>
